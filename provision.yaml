---
# VPC setup for brain
- name: Provision VPC in AWS
  hosts: localhost
  connection: local
  gather_facts: False

  vars_files:
  - group_vars/brain_vpc.txt

  tasks:
  - name: create vpc
    ec2_vpc_net:
      name: "{{ brain_vpc.name }}"
      state: present
      cidr_block: "{{ brain_vpc.cidr }}"
      tags: "{{ brain_vpc.tags }}"
      region: "{{ brain_vpc.region }}"
    register: vpc

  - name: create internet gateway
    ec2_vpc_igw:
      state: present
      region: "{{ brain_vpc.region }}"
      vpc_id: "{{ vpc.vpc.id }}"
    register: igw

  - name: create public subnet
    ec2_vpc_subnet:
      state: present
      vpc_id: "{{ vpc.vpc.id }}"
      cidr: "{{ brain_vpc.public_subnet.cidr }}"
      az: "{{ brain_vpc.public_subnet.az }}"
      region: "{{ brain_vpc.region }}"
      resource_tags: "{{ brain_vpc.public_subnet.tags }}"
    register: public_subnet

  - name: create private subnet
    ec2_vpc_subnet:
      state: present
      vpc_id: "{{ vpc.vpc.id }}"
      cidr: "{{ brain_vpc.private_subnet.cidr }}"
      az: "{{ brain_vpc.private_subnet.az }}"
      region: "{{ brain_vpc.region }}"
      resource_tags: "{{ brain_vpc.private_subnet.tags }}"
    register: private_subnet

  - name: Set up public subnet route table
    ec2_vpc_route_table:
      vpc_id: "{{ vpc.vpc.id }}"
      region: "{{ brain_vpc.region }}"
      tags:
        Name: "public route table"
        env:  "{{ brain_vpc.env }}"
      subnets:
        - "{{ public_subnet.subnet.id }}"
      routes:
        - dest: 0.0.0.0/0
          gateway_id: "{{ igw.gateway_id }}"
    register: public_route_table

  - name: Create new nat gateway
    ec2_vpc_nat_gateway:
      state: present
      subnet_id: "{{ public_subnet.subnet.id }}"
      wait: yes
      region: "{{ brain_vpc.region }}"
      if_exist_do_not_create: true
    register: nat_gateway

  - name: Set up private subnet route table
    ec2_vpc_route_table:
      vpc_id: "{{ vpc.vpc.id }}"
      region: "{{ brain_vpc.region }}"
      tags:
        Name: "private route table"
        env:  "{{ brain_vpc.env }}"
      subnets:
        - "{{ private_subnet.subnet.id }}"
      routes:
        - dest: 0.0.0.0/0
          gateway_id: "{{ nat_gateway.nat_gateway_id }}"
    register: private_route_table

  - name: Create a security group for brain
    ec2_group:
      name: "{{ brain_vpc.sec_group.name }}"
      description: Create first security group for brain
      vpc_id: "{{ vpc.vpc.id }}"
      region: "{{ brain_vpc.region }}"
      rules:
        - proto: tcp
          from_port: 80
          to_port: 80
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 443
          to_port: 443
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 22
          to_port: 22
          cidr_ip: 0.0.0.0/0
    register: brain_sec_group

  - name: Provision ec2 instance for stackstorm
    ec2:
      region: "{{ brain_vpc.region }}"
      instance_type: "{{ st2.instance_type }}"
      image: "{{ st2.image_id }}"
      keypair: "{{ st2.keypair }}"
      assign_public_ip: True
      wait: True
      vpc_subnet_id: "{{ public_subnet.subnet.id }}"
      group: ["{{ brain_vpc.sec_group.name }}"]
      instance_tags: "{{ st2.tags }}"
      exact_count: "{{ st2.exact_count }}"
      count_tag: "{{ st2.count_tags }}"
      user_data: "{{st2.user_data }}"
    register: st2
